# write tests for parsers

from seqparser import (
        FastaParser,
        FastqParser)
import pathlib

test_fa_dict = {'seq0':'TGATTGAATCTTTTGAGGGTCACGGCCCGGAAGCCAGAATTTCGGGGTCCTCTGTGGATATTAATCGAGCCCACACGGTGTGAGTTCAGCGGCCCCCGCA',
'seq1':'TCCGCCCGCTGTGCTGACGAGACTAGCAGGGAAATAAATAGAGGGTTTAGTTATACTCAGTAGGCAGTTCGATGGCTTATATCTAACTTCTTATTCCGAT',
'seq2':'TGTAGAGGCATTATTAGAGTTTCGCCACAACGGGGGCCTGCTGATCAAATCAGAATTCGTACAATCGGTTCGGGAGACACGGCTCTAAAGATACCGCTAG',
'seq3':'AATCCAGCGCGTGTTGTATCGAGCCCTTGGAAGTCGATGGTGTCTTTGGTGAAGGTCGATGAACTTCCTTGGCGAGGACAGCGAAGTTAATTGGTGGCGA',
'seq4':'GGTAGGCGGCTGCATAACGCCCCTGAAGAGACAGGGGGTTAGAGGTTCTCCCCCATCGTTCACAGTGAAGAGTGTGAGAGGCACACTGAAGAACATTGAG',
'seq5':'TAAGTAGTGCACTCCTGCGCGTCTCTTCCCAGAATCGTACTCTCAGAGCTAGAGAGGCGCGTTTGCCGTTCTACTCACCCCAGCCTCTGAAGAGGGATGC',
'seq6':'AGGCTTTGGGACGCCTAGTTGCTCACACTTAGAACCATCGCCGAGAAAGATGTACATTGCGTACAACGATACCCGAGGCCGATGACCATCCCAGCGTCCT',
'seq7':'CGAGAAGGGGTCAGGGTGGGCTGAAATTAGTAAGCTGAAGTCCATCTTACGACCCCCTATGCACATAGGAAAAGCAAGGTATGGCATGGTCGAGATATAT',
'seq8':'ACAACGGACATTAGGAATGATGCTGGTCTGAATGAGTAGATGATAACCTCTCATTATTCTGACCGAACTCAGCACTCCAAACTGGAACGATTAAGGCGTT',
'seq9':'AGCTTCCTTCTAACGCCGGGATATATAGCATGAAGACACCGAGAATAGCATGAGTTGACTAACTTAACCTGTATGCGGGCGGGAGCGGCGCGCGGAAGGT',
'seq10':'CTAAAAGAGGAACTACCTGATACCGCCTAATGACACGTATACTACTTAAACATTAAGTCGAATACTATAAACCTAACACATAAGCAAGGCGTGTCCCCCT',
'seq11':'TCGACGACCTAAGTTTTAACCTTTCGGCCCCCCTTTTCGACAGTGCTCTAAAGCGACAGGGACCACACTTGTTTATTGTTCGGGGGGATGTTAGCACTTA',
'seq12':'ACGCACACAAAGCCCACCATACATACTGCTTGAACGAGATAGTTTGCCCGTCGCACCTGTTTTTCTTGACCCTTTGATAGCTAATCCCGAAAGAGCTAAC',
'seq13':'TGTCCTGGAGTCAACGCGCTGTACAAAACACCTGGCTCCCTGTATTTTGAGGTCCGGTGTCCACGCTCACTTGCTAGACCCGTGAGAGTACCGCACTTGA',
'seq14':'TTACCGCATCGCAGCGATAAAATTGCTTCTAACGGCCAGTACGTTAGGCGGAGTAACGCTAAATTCCCGAACACGGTGCGTACATTTAAAATTCCAGGTT',
'seq15':'TCCTTTGCGGTTAAGCTTGACAAAATTACGCCCATCACCATTGAGGGTAGAATGGACTTTTGGCTTAGTCCGCCGTTCCTGCAGCCAATGGTGGGGGAGA',
'seq16':'GTCAGTCACTACGACTTACAACCGCTAATCTTGTATAAACGAACATTGACTCCTCTCTAGTTGTTCGATGCAGAAATTCCGCAATAGAAGCCGTAGATAG',
'seq17':'ACTTTGTCGCAAAACGGTCACTTCCCGACCCTTGAGATTTGCCTCCGATTGGCTAGAATTGTTTAGCATATTAGTGCTGGCGGCTGGGACACTTGCTCTA',
'seq18':'TATGATGAGCCATAGTCTCTTTGGAACGCACAGTGCCGGACCGTCTGGACTACAGCAATACCTCGCCAACTATCCGACGACCAAACCGTACCATATCTGC',
'seq19':'GAAATCAACAGCCCGCGCTATAGTCAATGTGGATTGTCCTTGCCAGACGTGTTGTACTATCACCAAAGAAAATGCATTTCAGGTCCCGTAGTTAAACATA',
'seq20':'TGCGGTGTAATACGCGACAGTTCAACTGCGTATCACCTCTATATGGCTTACTCGTTCTCTACTGTGGACTATGCTTGTTGAGACAACAGACGCCTTCCCT',
'seq21':'TAACGGTTTCGACAACAGAGGGTACCATTGAACATACGCCGCCAAGAACTATAAGGGTCAAATGCTGTCGTCACATGGTGGATCATACCTCACAACTGCA',
'seq22':'ACTTAATGCAATCTCCCAGTGTCAGATAAGCACTAGTTGAATACGCATGAATTCGGTCGTAGCCCAGGAGAAACGAGCATCTGGCGTAAACGTGGGATTG',
'seq23':'AATAAACGTTCGTATACATTTCCGTACTTCGCCAAGTCGACTAAAGTCGGGATGCTCTCAGCTGGTCAACGGGGCGTGAGCACCACCGTCCCGTAGGTTG',
'seq24':'AGTATACTTGTTCTCCCCAGATAATTTAATGGCTCGCTTTACGGGAATGATGCTAATTACGCTCATGAAGGCTGGTGGCAAAAGTTCCGTTAGGAGGCTG',
'seq25':'CTACCTACGGGACGAGTCCAACGGTGAAGACCGCCTTCGTAAAGCAGTCTGAAGACGTGCCGGACGGCGACAAAACAAGCCTCCTCCCCTCCTGAGTATT',
'seq26':'CACATTGACGGGCGCGCTTTTTGGGCCCCTTTAGCCTCCGTGAAATCTTCGAGATATGTGCCCTCAGGATTGCTTAACTTATGACATCAGGAGGGCGGGC',
'seq27':'ATGAGCACGGCTCGCTCTTCCAGTACGATATCGGGCTCGCCCTAACAACCGATCGTAGCTCATAAGCTAATAGGGGATTTTCTCCGCACGCAAAGGTGAA',
'seq28':'GCGGATATAGAAAGGGGTTCGTAGCCCATAGCAATTCAATAAATCGCGACGTTCCACAATTGTTCTGCGTGCAGGCCGTGCAATGAGCATCTCATTCTCC',
'seq29':'CCACGTGAGTGACGAATTGCAGAACCGCCGCTAAAAGAAAATATGCACCGCTCCCAATTATAGCCTAATAGCTTATGAAAAGATGCCTTGCCCCCATACG',
'seq30':'GCCGAACAGACGATGGTTGTCCCGTTAATTTGTAGTAGTTTGAACTCCAGGAGCTATGTGGCGCCCAAGCACTTTGCTATTTGACACGGGGCTCAGGACT',
'seq31':'TATCCACGACATCGCAACGGGACTAGCGTGGTCACTGCATCATATGCATAACGATTGTGTCACAAACACGTTACTCCATAATTGGCTGCCCGTACGGAAG',
'seq32':'TAGATCATGAAGCGAGTGAGCGCTCGACTCCCTGCCATCTCGGCGCGAAATTATGCCCATGGAGGGGTGCATGTGCAGGGGAACAGCCCGTGAAGGCGCA',
'seq33':'CGATCACAACTAAATTGCTCGCTCTCTTCGAGCGTACCCATCGCCCCTGTGCATATCTCTCCGCGCACAACAGTCACGCCAGTTACAAACGACGATGAGG',
'seq34':'GGGGATCGCAGTCGATCCGTTTTATCCACCTCATGTATTATAAGCCTTGGGAGGTGAATGGAGGGCTCTAGTCGATTTGCCTAACACTCCTACCTACTCG',
'seq35':'TAAAACCAAACAAGGATAGTTAGGTACCGCGGGCGTAAGACCACAAAGAGAAACGGAACCCGGGAGTTCGTCGATAGTGATAGGATAGAGATTAATGTGA',
'seq36':'AGAGCTCGTGTTTTGTTCAACCGGGCCTGGGATGGGAACTCTAGCGCAAACTCTCCAGGTGCCAAGTGGGGCTCTAGCTAAGTCGCACCGCGAGGTCAGA',
'seq37':'TCGCTTAGATCAACACGCGCTTGGTGCCTACGAACCAATGTCTTTTGGACTAAAGTTCTTACTGTAGATGCCGGAGATAGGTGGCCTACAGCTTTCAGAA',
'seq38':'GGCCCCCGACCACAAGTGTTTCGTACGTAGGCGCTCACACGTACCCGGAAGATTGACTGAGCTGGGCGCCCTTGGTATCTCGAGCCCATGGTGAGCTATA',
'seq39':'CTGATGTTTAGCAAACGGGTTTCTCGTTACGAAGACCTATACCCACATATATCTCCTAAGAGAACGAGCCGCTTCTAGAGCACCGGGATGGAGACGGCCC',
'seq40':'GTTTGCGCGGCTCAACGAAGGTGCCTAAGCATTCTTCGGTGGTGTACCGGGCAACACATTCAGATTAAGGAAAACAGTCATCTAAGAACGCTATCAACCC',
'seq41':'CCACAACCGACCCGGTATCGGTGCGTCTGTTAGGTAGCTGCGCTGGATCGGCTAAGCGCATCAGCTGGACGTCTGTATCTTATTGGCGGGGAGAAGTATT',
'seq42':'GCGCCGGCGCTGTATTCTGCAGATGGAGGGTAGCCCCTGAGTCTGATATAACACGGCCTTTGTAATAGAGCCCCATAGAAGCCCTGGATCTGGAAGCCTG',
'seq43':'GCCGAGGCCAATGCATTCCTATGGCAAGTCTTTAGAGCCTGGGTTCAGGAGTTGTTGCATCTTATAAACGCGGATATGATCTACTTTTTCGCCCGAGCTT',
'seq44':'CTCTGAAGGCCCTCGATCTTCTAGGATCTATGTAGTTGCGCAAGGACAGAGGACTATATCCAGTGGGCAACCAGTTTGACAGCGTTGCCATAAGGATGAA',
'seq45':'AAAAGTACGGAGATTGGCGCTTATCGACGATCGAATGTTGGGCGATCGCGCTTAAGTCCCACAAGCCTGTGCAAAAATGCTGAGGAAACACACGTGGACT',
'seq46':'AAAGCCTCCAAGAAAAGATTTTATAGTCTTATCAAGGTGGGAAAGAGAACTGCAGATCTCATTATGCCCGCATGCATTGGGAAGCTTATCTAACCTTACC',
'seq47':'CTCAATGTGCTACACTGCGCAACGTTATATCAACATTATGACGACTCGTATAACCCGGCGTTGGTATTGTGGCTACGGAGTCGGATGAGAATGTACGCGT',
'seq48':'TTTTCTAACGAGCGGGGCATGAACACGGTTTAGCTCCTGTCTCCTATACCACAACGATTCGCGAAAATTCGAAGGCGAAAAACACATTTTCCGATCAACT',
'seq49':'GAGTTGTAGTGATATCTGTAATGCGCAGCTATAGGAAAGCTTGTACTCATGCACTTGAAGGACCGCATTCGGGGGCTTCGCTACGTTTTGATCATACTCG',
'seq50':'TTTTGTATGTAGGAAAAAGGTTCTTAATCATTGCGCACTTCCCGCAGGCAGTGCACTTTCGCAGTCTTAGAAATAAGGAGGATAGTCTGTACCCGGCTCT',
'seq51':'TGTCGAAGCAATTCGCGATCCGGCGCCCAGTTGCTTGTCGCTTCATATAAACAAATATAACTATTGCCCGGCGGGCCCGCGAGTCCTGATTGCGTTCCCG',
'seq52':'CTTAGATATACACCGCCATGCGACAGAGAGTAATTATCGGGCTTATACGGGTAACTCAAGTAGTCTTAATAAAGGTAGTACAAGTTGACAACGTGGATTG',
'seq53':'CGCTGAGTAACAAGTCGAACTCGCAGATAACAGGTGCTGCGGAGGCCAGAGTTAAACCCAGTACCAACGCCAGCCTATTCAGCGGATAGCGCCAGTGGTA',
'seq54':'GGCGTCACTTCACACTGGAAATCTGACGGGTAGATGTTAGTGATAGGACTGGTAAACCGATGTGCGCGATAGGGCTTGGCAATCGTCACACTATTAAGGG',
'seq55':'TTGTTAATGCGCGATTACCCACAGGATGCACCTCTGACACACCCCCCCCCATCTCCAGGATGAAGTACTTGGCAGGTGGGGTCCAGTAACTTTCCCCCGG',
'seq56':'TATACATTAGCCTGACGCGGTCATTATGGCCACGAACGAGGGCTTAGCGGCTGGTCATAATGAACGACGTTCTAGAATATGGACTTATTCCACAGAGATC',
'seq57':'GACACCAGGTCTTAAACAACCGAAAGAGTGTATGCTTAGTTTTCGAACGTCGTCGAAGAGTGTCGCATGCTTAATTGTGTAGCAGGCGTCAATAGGTAAT',
'seq58':'CACAAAAGCCAACGTTCAAGTGTCTGGGCTTGTAAATCCCCAAGTTCACGTTCGTGGCACAGAGTTTCCGTCTCAATGCCAAGGGTATAACAATATGAAT',
'seq59':'GCGTGTTCATTCTACAACTAAAACCGGATATAGGTATGAATCTGGGGGCATTGTGCCACCATGGTATCAAAGTAAATGCGAGGCTTGGTTCAGTGGTCGC',
'seq60':'TAAGTCGTTCGTTTCGGGGAAGCATATGACAAAGCACGTACCGATCATCCTTGAAGCTTTCTTGCAGGAGCTCAAGCCACACCCAGCAACCGAATAGTTT',
'seq61':'CCATGCGGCCCCTTTTATCGTACGGTGTTCCACCTCTTCAAGGCATGTGCAGATCACATTCTGATGCGCCAAGAAAGTAAGTACGAACCGGCGCACCTCC',
'seq62':'TGTATAGTTGATATCTGGATAACCGAGTAATTGGTGTAACATGCGTACTCCATGCCGTCCCTTGTTAGCTCCATGTCGTCCAAACTATAGGACAACGTAC',
'seq63':'ACTTGCCGGCGTATGCCTCGTCAAGCGTATCGGGTATTCCCAACCAGAAACGACTTATGTTGAAGGGTGCTAAATCGGAATCGTGAGCCACCTGAAAAAC',
'seq64':'TATTCACACTAGTGTCATCAATATAGCGTGTAATGACACGCCCCACACTGCTCCCTGTGCACGTCTTTCTTCTCGGGTAATACATTCGTCAACCTACACA',
'seq65':'GTAGAAGAATGGCATAACATTCATAAACATATATTAATGCGGACGAGGAAACGATGTCATCATTCAATTTACCAGCTGGCGGCCGTAGGTGGAAACCAAC',
'seq66':'TGGATCATTTCCGGTTCGTGGTCTTGTCTCCGAAGTGCAGTGAGGACCAGACTGCGATATGGATTGATGCACAGTTTAGCGCAACCCGCAATCGGGTAGA',
'seq67':'TCCCGCGTTGACCCGTCTCCGAGCCATTCTCAACAGGACCATGTCCTATTGGTTCGGCAGGAGGAATCCAAGTTAGGCCGCAGCTGGTATGACCCGTACA',
'seq68':'GCGTGGTATTGACTATTTTGAAATGTTATCTCTGGATCCTCGCAGGGTTGTCTTGAAACTAGAATTTCCATAGGTTGTCCTGATTATAGCGCACGCACTG',
'seq69':'TACTTCCGTTAGATATTAACCCTAGTGATGGCCCTAACCCGCGATTTTGGCGCCTGGCCAACAACCGCCTGGGTCGGAGCCAGGGTGCCTTGATTGGTAT',
'seq70':'GGTATTGACATTTAGTTACCGGTATGAAGCCATCTCCTGCCTGCCGCGGTAGTACAGGGGGTGTCGGACGGCTGAGAAGGACCGTCGCTGTGTCCTTTGC',
'seq71':'GCAGCCGGCGTGGGCTAATTTCATCAGCACAAGCTGGATCTTTTTAAGAGGCTACAGATGGCTGTATGCGTTGTAGCGAAAAACTAAGCCTCGGTGAAGT',
'seq72':'CTCGGACTGTACCGCGACGTGCACCGTCTGTGATTATACGATATCACGTTCGAATCCAGGAACGAATAAGCGCTATCGGTCTTATAAGAAGTCCCTACTA',
'seq73':'GCACCCATACAGTAGTGTAGCGTATGGCAAGACTAGTTCGAGTGAACAAGGTCGATGCCTTTTTAAGCAAAGTGCCCCAAGTCGAATTTGAATCTGTTGT',
'seq74':'ACTGCGCCTATGGCCATGCAGCGAAGTGCTCGTCGGTGACCGGATGGGGCGCGTATGGGTGTCAATCTCGCCCACGGGCTTGATCTGATTGAAGCTCTTC',
'seq75':'GGTGTGTGACACCTCAAGAGCACAAGCATCCCGTCAAGACACATGGTTGTCAGTCGTGTGCCAGAGTTAGACAATAGTACAAATGCAGGTCTGGGTCATG',
'seq76':'TGAACGCCATTCAGTCTTGAGATCGATAAATCCCATACCTAGGCTAACCAACAGCACTCCTGATCATAATAGTGCACCATACCTACGCCTGCCGAACCAT',
'seq77':'GGTTTTTTGTATTGGTGCGGGGAAATTCATGGACCGCAGTTCGGTGGGCGACGGACTTCGGTTTATACGTGGTTCAAGTCCCCCAAATGCTCATACCGCA',
'seq78':'CGGATCGCCTGCGAACGCGGTTTCTTAGGTGAATAGCGCTCAGCGTTATCTAGGTCACATAATCTATATGGTCAGCAGGTACCCACCCTTAACTGGCCTT',
'seq79':'TAACATTAGCGCGACCCTTGATCTATCGCAGTTTGCGGAGTCCCTTTTTGTTTTCTGGGACTATAAGGAGACGGGCATGACTGCCTAGGAAATTGTCGTA',
'seq80':'CAGATTGAGACTGCCGGCACGCATTCATCCAGCGGTGATTTCCGTTAGAGGCCAGTCTACCGAGCACACTTGTCCTGTAAATTTAGCTGCCCGGAGGGCT',
'seq81':'ATTGATTAGTCTCGTAATGGATGACTCCGGGTCTGCTTATGTCTACCAGCGCCGCGAGACGCGAAGACCTACGACAGCTTAGCGCACGGAGCACGACGGT',
'seq82':'GCATGGGCTCTACCATGAGGATGACCCACGCCGCGCGCGAGCCTGAGGAGAAGGCCTTGATGTAGAGTCTTCCGGAATCATCGTGAACTGCAATGTGGTC',
'seq83':'TTAATTAGTCCCTGGATGTAAACTATCCAAGTAGTAGGTGTTTCGTACCGTGCTATCATAACAGCGAGTATGTATGGGAGATGTCTCTATAAGACGGTAA',
'seq84':'CTTGGGCCGTCTTAGAGGTGTTGTTTCTCCTTCCTTGCCGCACGATGGTGCTGTTTAGAGCCCGTTAACAGGAAAACCAGCGTGATCCTGCATATCGTTA',
'seq85':'CACATAGCCTCGATGCCGAATCGATCCTTAGCGCCGTACTCACAACCATGACCTGAAGAGCGAGTCCGATCCAATGAGTGCGTTTGCACGGAGTTTTTGA',
'seq86':'ATGCCGTAGCCCTCGGCGCCATTAATCCTCACCGGGCTACTCACACACAGCCTTACAGTAATCATCGTAGCCTTTCGCACAGTTCTGTCGACAGCCGTCC',
'seq87':'ATAATTGTCTGGGTTAACACGATACAGTCTTCTTATTTTCGATTCGTCAATTGGTCGTGTATAGTGATGAGCAAATTTCCACGAAGACTGCGGAACGAAG',
'seq88':'CCGCAGATTCTATACCATCGCTGTAGTGTGTAGGGGAGCACGTCGCGGGTCAAAAGCCTCCCTACTTGTACTATTTTTACCCCAGGAATTTCTGCTCGTG',
'seq89':'GGTATGTGACAACTCTTGGCACTGCCGGGTGACGGTTCACGAAAACTTGTTTTGCATCTTAAATTTAGCGTTGTCTCGGTCTAAAATACGGAAATGACAG',
'seq90':'AGACACCACTAACCATCCGTTATAGTCGAGAGATCAGAAAGCTCAGCATTTAGCTAACTACGGGTCCAAACACCGAGTTTCCCAGCGGGAATTGTGAAAC',
'seq91':'GAGTTAGATAGTCTCAAGCACATAGTGTCGACATTAACAGGAGACGGAGTCCGGTTGGTATACCTATTATCGGTAACAACTGCTCTCTCTCGGATCTGTC',
'seq92':'TCGGGAGTAGTTTCATCGTCTAAGTCGTGCGGGTCATAATTCCGACGCTCACATACGTCTTCCGTTCACTCGACGTCTGTGGGCTTAAAATGGCGTTTCA',
'seq93':'GTTATGCTGTATTCAACTGAATTATGAGGTGTCTGCTGAATTAGGGTCCCCCTTCTTCGTGTTCTAACGGGAGGCGAAACCTGCAACCCTATTGAACCGT',
'seq94':'CCAACAGCAGAAACTAGCCGATAGCTCGATCCCATAAAGGGTAAGAACACATGCGCCCTACTCACTATAAGGGACTTTGAGCATGGCCGCTCCGGAAGCC',
'seq95':'AAATTACATCTCTCCCCGTTGCCTGCCCAGCAGCTAACCATTGCTGTCGGGTCGACAAGGTTTCTATGTCCACTGCATACCATCGCTCACCTATCGCTGT',
'seq96':'TAGCTCAAGAACAATATAAGGTACGCGGAGCGTAATTTGATGTCCAGCCGTGTCCCAAAGCCGAGACTACCTCCAATTCATTGTCATGATGTAAACTCAG',
'seq97':'TCTGCACTTTTACAAATTTCGTCTTAAACGGCTCTCCCGACGAACTTTCTGGGGAGTCTGAGCTCCCTGCTATATGCGTCATCAAGTACAAGGCGAAGAA',
'seq98':'CGAGCGAGAAACGCGCTAACTAGCAACCGGAACAACAATGCTGGGTTGAATTTGATTCGCACCCGACGATCACTAGAGAGTTTATCTGGGACTCCGGGAC',
'seq99':'CAAACCGGCGATGCGGGTACTCCCTACAAGTTGGACTCCGCAGCGAACGCCGCAGGGGCCATTATACGGCGGTCTTGGCGGCGTCGACCAGGCCGGTCCA'}

def test_freebie_parser_1():
    """
    This one is a freebie
    DO NOT MODIFY THIS FUNCTION
    """
    assert True


def test_freebie_parser_2():
    """
    This too is a freebie
    DO NOT MODIFY THIS FUNCTION
    """
    assert 1 != 2

        
def test_FastaParser():
    """
    Write your unit test for your FastaParser
    class here. You should generate an instance of
    your FastaParser class and assert that it properly
    reads in the example Fasta File.
    """
    data_dir = pathlib.Path(__file__).resolve().parent
    fap = FastaParser(data_dir/"../data/test.fa")

    for s in fap:
        assert test_fa_dict[s[0]] == s[1]

def test_FastqParser():
    """
    Write your unit test for your FastqParser
    class here. You should generate an instance of
    your FastqParser class and assert that it properly
    reads in the example Fastq File.
    """
    data_dir = pathlib.Path(__file__).resolve().parent
    fap = FastqParser(data_dir/"../data/test.fa")

    for s in fap:
        name = s[1]
        assert test_fa_dict[name[1:]] == s[2]
